import telebot

from bs4 import BeautifulSoup
from requests import get

headers = ({'User-Agent':'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36'})
sapo = "https://www.worldometers.info/coronavirus/"

bot = telebot.TeleBot('token') ## showcovidbot


usa = 'üá∫üá∏'
russia = 'üá∑üá∫'
looking = 'üîç'
warning = '‚ö†'

##startText1 = usa +': Hi, I`m COVID-2019 bot.\nWrite me the name of the country to show the statistics of the coronavirus there.\n\n' + russia + ': –ü—Ä–∏–≤–µ—Ç, —è COVID-2019 –±–æ—Ç.\n–ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ –≤ –Ω–µ–π.'

startText = usa + ' Hi, I`m COVID-2019 bot.\nWrite me the name of the country to show the statistics of the coronavirus there.'
onceMoreText = usa + ' Country was not found.\n\nWrite me the name of the country to show the statistics of the coronavirus there.'

startMarkup = telebot.types.InlineKeyboardMarkup()
""" startMarkup.add(telebot.types.InlineKeyboardButton(text='United States', callback_data='usa')) ## —ç—Ç–æ —á—Ç–æ–±—ã –≤—ã—Å–ª–∞—Ç—å –∫–∞–∂–¥—É –∫–Ω–æ–ø–∫—É –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Å—Ç–æ–ª–±–∏–∫
startMarkup.add(telebot.types.InlineKeyboardButton(text='Italy', callback_data='it'))
startMarkup.add(telebot.types.InlineKeyboardButton(text='Ukraine', callback_data='uk')) """

button1 = telebot.types.InlineKeyboardButton(text='USA', callback_data='USA')
button2 = telebot.types.InlineKeyboardButton(text='Italy', callback_data='Italy')
button3 = telebot.types.InlineKeyboardButton(text='Ukraine', callback_data='Ukraine')

startMarkup.add(button1, button2, button3) ## –∞ —ç—Ç–æ –≤—ã—Å—ã–ª—ã–∞–µ—Ç —Ç—Ä–∏ –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç–æ–ª–±–∏–∫

def delSpaces(a): ## —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–±–µ–ª–æ–≤ –∏–∑ —Å—Ç—Ä–æ–∫–∏
    return ''.join(a.split())

def getCountry(name): ## —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—Ä–∞–Ω–µ –∏–∑ HTML –∫–æ–¥–∞
    response = get(sapo, headers=headers)
    html_soup = BeautifulSoup(response.text, 'html.parser')
    allTr = html_soup.find_all('tr')
    for i in range(1, 187):
        country = allTr[i].find_all('td')[0].text
        totalCases = allTr[i].find_all('td')[1].text
        death = allTr[i].find_all('td')[3].text
        recovered = allTr[i].find_all('td')[5].text

        if country.lower() == name.lower():
            boolState = True
            break
        else:
            boolState = False
    return boolState, country, delSpaces(totalCases), delSpaces(death), delSpaces(recovered)

@bot.message_handler(commands=['start']) ## —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
def start_message(message):
    bot.send_message(message.chat.id, startText, reply_markup=startMarkup)

@bot.message_handler(content_types=['text']) ## —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Ç–µ–∫—Å—Ç
def send_text(message):
    if message.text:
        bot.send_message(message.chat.id, looking + "Looking for a country...")
        boolState, country, totalCases, death, recovered = getCountry(message.text)
        if boolState:
            bot.send_message(message.chat.id, warning + ' ' + country + " / Cases: " + totalCases + " / Death: " + death + " / Recovered: " + recovered)
        else: ## –µ—Å–ª–∏ —é–∑–µ—Ä –Ω–∞–ø–∏—Å–∞–ª –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–π –Ω–∞–º —Ç–µ–∫—Å—Ç
            bot.send_message(message.chat.id, onceMoreText, reply_markup=startMarkup)


@bot.callback_query_handler(func=lambda call: True)
def query_handler(call): ## –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
    bot.answer_callback_query(callback_query_id=call.id, text='processing...')
    if call.data:
        boolState, country, totalCases, death, recovered = getCountry(call.data)
        if boolState:
            bot.send_message(call.message.chat.id, warning + ' ' + country + " / Cases: " + totalCases + " / Death: " + death  + " / Recovered: " + recovered) ## –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞

    ##bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id) ## —É–±–∏—Ä–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Å–æ–æ–±—â–µ–Ω–∏—è


bot.polling()